FROM alpine:latest

ENV USERS_FILE=/etc/ocserv/users.txt
ENV OC_VERSION=1.1.0

RUN buildDeps=" \
                curl \
                g++ \
                gnutls-dev \
                gnupg \
                libev-dev \
                libnl3-dev \
                linux-headers \
                linux-pam-dev \
                make \
                readline-dev \
                tar \
                xz \
        "; \
        set -x \
        && apk add --update lz4-dev libseccomp-dev bash gettext \
        && apk add --update --virtual .build-deps $buildDeps \
        && curl -SL "ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz" -o ocserv.tar.xz \
        && mkdir -p /usr/src/ocserv \
        && tar -xf ocserv.tar.xz -C /usr/src/ocserv --strip-components=1 \
        && rm ocserv.tar.xz* \
        && cd /usr/src/ocserv \
        && ./configure \
        && make \
        && make install \
        && mkdir -p /etc/ocserv \
        && cp /usr/src/ocserv/doc/sample.config /etc/ocserv/ocserv.conf \
        && cd / \
        && rm -fr /usr/src/ocserv \
        && runDeps="$( \
                scanelf --needed --nobanner /usr/local/sbin/ocserv \
                        | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
                        | xargs -r apk info --installed \
                        | sort -u \
                )" \
        && apk add --virtual .run-deps $runDeps gnutls-utils iptables libnl3 readline \
        && apk del .build-deps \
        && rm -rf /var/cache/apk/*

COPY docker-entrypoint.sh /entrypoint.sh
COPY ocserv.conf.template /etc/ocserv/ocserv.conf.template

ENTRYPOINT ["/entrypoint.sh"]

EXPOSE 443
CMD ["ocserv", "-c", "/etc/ocserv/ocserv.conf", "-f"]
