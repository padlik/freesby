server {
  listen 80;

  server_name ${NGINX_HOST};
  
  location /.well-known/acme-challenge/ {
    root /usr/share/nginx/html;
    allow all;
  }

  location / {
    return 301 https://$server_name$request_uri;
  }

  access_log /dev/null;
  error_log  /dev/null crit;
}

server {
  listen 80 default_server;
  server_name _;
  return 444; # "Connection closed without response"
}


server {
  listen 443 default_server ssl http2;
  listen [::]:443 ssl http2;

  ssl_certificate         /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/${NGINX_HOST}/chain.pem;
  ssl_stapling on;
  ssl_stapling_verify on;
  # resolver
  resolver 1.1.1.1 1.0.0.1 valid=300s;
  resolver_timeout 5s;
  # It'd be great to include HSTS in non-LE installs too, but
  # HSTS disables "clicking through" the HTTPS error pages.
  add_header Strict-Transport-Security max-age=63072000;

  ssl_protocols TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256';
  ssl_ecdh_curve auto;
  ssl_session_timeout  10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;

  # headers
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Robots-Tag none;
  add_header Referrer-Policy "no-referrer";

  # Disable all logging
  access_log /var/log/nginx/ssl.log;
  error_log  /var/log/nginx/ssl_error.log;

  root  /var/www/html;
  index index.html index.htm;

  location / {
    autoindex off;
  }

  location ~ ^/${FREESBY_URL}/(.*) {
    auth_basic      "Administrator Login";
    auth_basic_user_file  /var/www/.htpasswd;
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_pass http://127.0.0.1:8080/$1;
  }


}
